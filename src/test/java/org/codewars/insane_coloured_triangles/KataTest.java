package org.codewars.insane_coloured_triangles;

import org.junit.jupiter.api.Test;

import static org.codewars.insane_coloured_triangles.Kata.reducingFromTwoToOne;
import static org.codewars.insane_coloured_triangles.Kata.triangle;
import static org.junit.jupiter.api.Assertions.*;

class KataTest {

    @Test
    public void examples() {
        assertEquals('B', triangle("B"));
        assertEquals('R', triangle("GB"));
        assertEquals('R', triangle("RRR"));
        assertEquals('B', triangle("RGBG"));
        assertEquals('G', triangle("RBRGBRB"));
        assertEquals('G', triangle("RBRGBRBGGRRRBGBBBGG"));
    }
    @Test
    void triangleTest() {

    }

    @Test
    void reducingFromTwoToOneText() {
        long start = System.currentTimeMillis();
        for(long i = 0; i < 10000000000L; i++) {
            reducingFromTwoToOne('B', 'G');
            reducingFromTwoToOne('R', 'G');
            reducingFromTwoToOne('R', 'R');
        }
        long time = System.currentTimeMillis() - start;
        System.out.println(time);
        //1486 vs 4, Hashmap is slow
    }


    @Test
    void metidumTest() {
        long start = System.currentTimeMillis();
        String row = ("GBGRGGGRGBRBGRRRGBRBRRGRBRRRRGRRBBRBRGRRBGRRBGGGBGBBRRBRBBRBGRBBRGBGBGGBGBGGGBGRGGRGBRGBBRGBBBGGRRRG" +
                "GRGGRRRBGGGGBBBRGGBRRGGGRGRRRGGBGBGGGRRGGRGRBRBRRRRRGGGRRBBRRGGRGRBGRRGRRRGGBGGRGGBBGGRRBRGGBBGBRGRRGGBBRGBB" +
                "GGRGRBBRBBRRRGBBGGRBRRBGBBBGGGRRGGBRRGRGRRRGGBBGRBBBRGRGBGGGGBBGBBRRGBRRGRBGRRGRGRGGRRGBGRRGRBGBRBBBBBRBRGRRGGRBGB" +
                "GBRBBGGGGBBGBGRRRGBRGRRGBGBGBRGRGBBBGGBBBRRBRBRRRBBGGGRRBGRBBRBRGBBRRRGGBBGRRGGBBRRGRGBRGBGGBRGGGRBBGBBBRRGBGRBBRBRRGGGB" +
                "GGGGBBBGRRRRRRRGGRGBGRGBRGBBBGBBRRBGBBRGGRBBGGBBRRRBRGGGRRRGBGRBGBGRBRBRRGRGBRBRRRBGRRGRGBRBRGBGBBRGBGRRGRGGGGBRBBBBBGGRRGGG" +
                "BBRBRRBGRBBGGRBGBBGRBGRRRBBRGBGBBBRRGGRBGBGGBGRRRBRBGBGBGGBRBGRRRGBRRGBRRBBRRRRRRRRRRRGRRRGGGGRGGRBBBBGBGBGGRRRRGGGRBGRBRGBRBRBGBGBRGRRGBBRRBBBRBBBGBGRBRGBGBBRBRRGRBGRBGBGBGGBRRGRRRRBRRGRBBGGBBRGBRGRRRRBBBBRGRBGBRRBGGRGRRGGRBRRBRBRGRG" +
                "BRRBGGGRGRRRGBGGGRRGBGRGBBGRRBRGRBGRRRBBRRGRGGGGGRBGGGRBBGBRBBRBGRRRBBRRBRBRGGGBGRRBBGGBBBGBBBRGRGGRRGBGGGRBRBRBBGBRBRGBGGGGGGRGRGGBGRGG" +
                "BRGGBRBBGGGRGRRRGRRBRBGGGBBGBGGRRRBRRGGRGGRBRGGGBRRRRGRGGRBBBBRGGRBGRGBBRRBBRRBBRRBGGRRBBRGGRRGBGGRBGGRGGRGBRRRBGBBRBGRGGRRBRGGRGRRRBBRGBRGRBRRBRGRBGRBBGBBRRGGRRRBBBRBGRRRRRGB" +
                "GBBBBGBRRGRRGGRRBBBGGGGRGBRRGRGRGBRRRBGGRBRRGRBBRRGRGRGGBGGBBGBBRGRRGGRRGBBBBRBBGRBGRRRRGBRGGGBGRRBBRGBBBRGGRGGBRGBGBBGGBRRGRRGBGRBGGGRRGBRBRBGBGRBRGGRBRBRBBRBBRBBBBBRBRRGBRRRRRBBGGGBGRGBRGGRRBGGRRBRGRBRRRRBBBGBGGBBBBGBRGBRRRBBGBGRGRGGRGRGGBGRGGGBRBRRRGGBGRBBBRRBBBBBGBBRRGRGGBGGGBBRR" +
                "BBRBRGBBBRBBBRBBGRRGBGGRGRGGGBGRRBGGBBBRRRGGGBGGGBGGGBBBBGBBRBRBGBBRBRGRBBRRBBBRRRBBRRRRBGRRGGBGBGGBBBRGGBGGBGRBRRBRRGGRGBGGBBBGRBGBBGGGRGGRGGGRBRRBRRGGBBBRGRRRGGRBRBRRRGRGBBBBBBBRRGRRRRRGGRBBRBGBRBRGRGRBRGBGGBBGGBGBRGRBBBRRBRGGRBGBRRGBGBRRBRGBGGRRBBBBGRGRRBRBRRRBBGRRGBRGGBGRBBBBGGGBGRBBBRRRGRGGRGGR" +
                "BGBRRRRBBGBRBRBGGRRRGRBBGGGGBBBGRGBBBGRRRBBGBBGRBRGGRBGRRRRGGGRRBRRGRBGGBRGRBBRBGBRGBRBBBBBRRGRGGRBRBGRRRGGBGBRRGRGRGRBRRGGBGBGBRBBGRBGGBGGBRRRRRGRBRRGBGGRBRBBRBBRRBRBBBGBBRRGBRRRGBGGGBGBBRRGGRRRBGRRGGGGGGBBBRGRBRBBGBRRGGBGRGB" +
                "RGRGRBGBGRRGBBRRBBRGBBGBBBGRRGRGBGBRRBBRBBRRGGGBBRRGRRBBGBRRGBGBBRBGBBBBBRRRGRGRRRRGBRBBBRGBGRRBRBBGRGGGRBBGRRRBGRBGRBRGGBRBRRGB" +
                "BGGBGRBRBRRBRRBRR" + "GBGRGGGRGBRBGRRRGBRBRRGRBRRRRGRRBBRBRGRRBGRRBGGGBGBBRRBRBBRBGRBBRGBGBGGBGBGGGBGRGGRGBRGBBRGBBBGGRRRG" +
                "GRGGRRRBGGGGBBBRGGBRRGGGRGRRRGGBGBGGGRRGGRGRBRBRRRRRGGGRRBBRRGGRGRBGRRGRRRGGBGGRGGBBGGRRBRGGBBGBRGRRGGBBRGBB" +
                "GGRGRBBRBBRRRGBBGGRBRRBGBBBGGGRRGGBRRGRGRRRGGBBGRBBBRGRGBGGGGBBGBBRRGBRRGRBGRRGRGRGGRRGBGRRGRBGBRBBBBBRBRGRRGGRBGB" +
                "GBRBBGGGGBBGBGRRRGBRGRRGBGBGBRGRGBBBGGBBBRRBRBRRRBBGGGRRBGRBBRBRGBBRRRGGBBGRRGGBBRRGRGBRGBGGBRGGGRBBGBBBRRGBGRBBRBRRGGGB" +
                "GGGGBBBGRRRRRRRGGRGBGRGBRGBBBGBBRRBGBBRGGRBBGGBBRRRBRGGGRRRGBGRBGBGRBRBRRGRGBRBRRRBGRRGRGBRBRGBGBBRGBGRRGRGGGGBRBBBBBGGRRGGG" +
                "BBRBRRBGRBBGGRBGBBGRBGRRRBBRGBGBBBRRGGRBGBGGBGRRRBRBGBGBGGBRBGRRRGBRRGBRRBBRRRRRRRRRRRGRRRGGGGRGGRBBBBGBGBGGRRRRGGGRBGRBRGBRBRBGBGBRGRRGBBRRBBBRBBBGBGRBRGBGBBRBRRGRBGRBGBGBGGBRRGRRRRBRRGRBBGGBBRGBRGRRRRBBBBRGRBGBRRBGGRGRRGGRBRRBRBRGRG" +
                "BRRBGGGRGRRRGBGGGRRGBGRGBBGRRBRGRBGRRRBBRRGRGGGGGRBGGGRBBGBRBBRBGRRRBBRRBRBRGGGBGRRBBGGBBBGBBBRGRGGRRGBGGGRBRBRBBGBRBRGBGGGGGGRGRGGBGRGG" +
                "BRGGBRBBGGGRGRRRGRRBRBGGGBBGBGGRRRBRRGGRGGRBRGGGBRRRRGRGGRBBBBRGGRBGRGBBRRBBRRBBRRBGGRRBBRGGRRGBGGRBGGRGGRGBRRRBGBBRBGRGGRRBRGGRGRRRBBRGBRGRBRRBRGRBGRBBGBBRRGGRRRBBBRBGRRRRRGB" +
                "GBBBBGBRRGRRGGRRBBBGGGGRGBRRGRGRGBRRRBGGRBRRGRBBRRGRGRGGBGGBBGBBRGRRGGRRGBBBBRBBGRBGRRRRGBRGGGBGRRBBRGBBBRGGRGGBRGBGBBGGBRRGRRGBGRBGGGRRGBRBRBGBGRBRGGRBRBRBBRBBRBBBBBRBRRGBRRRRRBBGGGBGRGBRGGRRBGGRRBRGRBRRRRBBBGBGGBBBBGBRGBRRRBBGBGRGRGGRGRGGBGRGGGBRBRRRGGBGRBBBRRBBBBBGBBRRGRGGBGGGBBRR" +
                "BBRBRGBBBRBBBRBBGRRGBGGRGRGGGBGRRBGGBBBRRRGGGBGGGBGGGBBBBGBBRBRBGBBRBRGRBBRRBBBRRRBBRRRRBGRRGGBGBGGBBBRGGBGGBGRBRRBRRGGRGBGGBBBGRBGBBGGGRGGRGGGRBRRBRRGGBBBRGRRRGGRBRBRRRGRGBBBBBBBRRGRRRRRGGRBBRBGBRBRGRGRBRGBGGBBGGBGBRGRBBBRRBRGGRBGBRRGBGBRRBRGBGGRRBBBBGRGRRBRBRRRBBGRRGBRGGBGRBBBBGGGBGRBBBRRRGRGGRGGR" +
                "BGBRRRRBBGBRBRBGGRRRGRBBGGGGBBBGRGBBBGRRRBBGBBGRBRGGRBGRRRRGGGRRBRRGRBGGBRGRBBRBGBRGBRBBBBBRRGRGGRBRBGRRRGGBGBRRGRGRGRBRRGGBGBGBRBBGRBGGBGGBRRRRRGRBRRGBGGRBRBBRBBRRBRBBBGBBRRGBRRRGBGGGBGBBRRGGRRRBGRRGGGGGGBBBRGRBRBBGBRRGGBGRGB" +
                "RGRGRBGBGRRGBBRRBBRGBBGBBBGRRGRGBGBRRBBRBBRRGGGBBRRGRRBBGBRRGBGBBRBGBBBBBRRRGRGRRRRGBRBBBRGBGRRBRBBGRGGGRBBGRRRBGRBGRBRGGBRBRRGB" +
                "BGGBGRBRBRRBRRBRR" + "GBGRGGGRGBRBGRRRGBRBRRGRBRRRRGRRBBRBRGRRBGRRBGGGBGBBRRBRBBRBGRBBRGBGBGGBGBGGGBGRGGRGBRGBBRGBBBGGRRRG" +
                "GRGGRRRBGGGGBBBRGGBRRGGGRGRRRGGBGBGGGRRGGRGRBRBRRRRRGGGRRBBRRGGRGRBGRRGRRRGGBGGRGGBBGGRRBRGGBBGBRGRRGGBBRGBB" +
                "GGRGRBBRBBRRRGBBGGRBRRBGBBBGGGRRGGBRRGRGRRRGGBBGRBBBRGRGBGGGGBBGBBRRGBRRGRBGRRGRGRGGRRGBGRRGRBGBRBBBBBRBRGRRGGRBGB" +
                "GBRBBGGGGBBGBGRRRGBRGRRGBGBGBRGRGBBBGGBBBRRBRBRRRBBGGGRRBGRBBRBRGBBRRRGGBBGRRGGBBRRGRGBRGBGGBRGGGRBBGBBBRRGBGRBBRBRRGGGB" +
                "GGGGBBBGRRRRRRRGGRGBGRGBRGBBBGBBRRBGBBRGGRBBGGBBRRRBRGGGRRRGBGRBGBGRBRBRRGRGBRBRRRBGRRGRGBRBRGBGBBRGBGRRGRGGGGBRBBBBBGGRRGGG" +
                "BBRBRRBGRBBGGRBGBBGRBGRRRBBRGBGBBBRRGGRBGBGGBGRRRBRBGBGBGGBRBGRRRGBRRGBRRBBRRRRRRRRRRRGRRRGGGGRGGRBBBBGBGBGGRRRRGGGRBGRBRGBRBRBGBGBRGRRGBBRRBBBRBBBGBGRBRGBGBBRBRRGRBGRBGBGBGGBRRGRRRRBRRGRBBGGBBRGBRGRRRRBBBBRGRBGBRRBGGRGRRGGRBRRBRBRGRG" +
                "BRRBGGGRGRRRGBGGGRRGBGRGBBGRRBRGRBGRRRBBRRGRGGGGGRBGGGRBBGBRBBRBGRRRBBRRBRBRGGGBGRRBBGGBBBGBBBRGRGGRRGBGGGRBRBRBBGBRBRGBGGGGGGRGRGGBGRGG" +
                "BRGGBRBBGGGRGRRRGRRBRBGGGBBGBGGRRRBRRGGRGGRBRGGGBRRRRGRGGRBBBBRGGRBGRGBBRRBBRRBBRRBGGRRBBRGGRRGBGGRBGGRGGRGBRRRBGBBRBGRGGRRBRGGRGRRRBBRGBRGRBRRBRGRBGRBBGBBRRGGRRRBBBRBGRRRRRGB" +
                "GBBBBGBRRGRRGGRRBBBGGGGRGBRRGRGRGBRRRBGGRBRRGRBBRRGRGRGGBGGBBGBBRGRRGGRRGBBBBRBBGRBGRRRRGBRGGGBGRRBBRGBBBRGGRGGBRGBGBBGGBRRGRRGBGRBGGGRRGBRBRBGBGRBRGGRBRBRBBRBBRBBBBBRBRRGBRRRRRBBGGGBGRGBRGGRRBGGRRBRGRBRRRRBBBGBGGBBBBGBRGBRRRBBGBGRGRGGRGRGGBGRGGGBRBRRRGGBGRBBBRRBBBBBGBBRRGRGGBGGGBBRR" +
                "BBRBRGBBBRBBBRBBGRRGBGGRGRGGGBGRRBGGBBBRRRGGGBGGGBGGGBBBBGBBRBRBGBBRBRGRBBRRBBBRRRBBRRRRBGRRGGBGBGGBBBRGGBGGBGRBRRBRRGGRGBGGBBBGRBGBBGGGRGGRGGGRBRRBRRGGBBBRGRRRGGRBRBRRRGRGBBBBBBBRRGRRRRRGGRBBRBGBRBRGRGRBRGBGGBBGGBGBRGRBBBRRBRGGRBGBRRGBGBRRBRGBGGRRBBBBGRGRRBRBRRRBBGRRGBRGGBGRBBBBGGGBGRBBBRRRGRGGRGGR" +
                "BGBRRRRBBGBRBRBGGRRRGRBBGGGGBBBGRGBBBGRRRBBGBBGRBRGGRBGRRRRGGGRRBRRGRBGGBRGRBBRBGBRGBRBBBBBRRGRGGRBRBGRRRGGBGBRRGRGRGRBRRGGBGBGBRBBGRBGGBGGBRRRRRGRBRRGBGGRBRBBRBBRRBRBBBGBBRRGBRRRGBGGGBGBBRRGGRRRBGRRGGGGGGBBBRGRBRBBGBRRGGBGRGB" +
                "RGRGRBGBGRRGBBRRBBRGBBGBBBGRRGRGBGBRRBBRBBRRGGGBBRRGRRBBGBRRGBGBBRBGBBBBBRRRGRGRRRRGBRBBBRGBGRRBRBBGRGGGRBBGRRRBGRBGRBRGGBRBRRGB" +
                "BGGBGRBRBRRBRRBRR" + "GBGRGGGRGBRBGRRRGBRBRRGRBRRRRGRRBBRBRGRRBGRRBGGGBGBBRRBRBBRBGRBBRGBGBGGBGBGGGBGRGGRGBRGBBRGBBBGGRRRG" +
                "GRGGRRRBGGGGBBBRGGBRRGGGRGRRRGGBGBGGGRRGGRGRBRBRRRRRGGGRRBBRRGGRGRBGRRGRRRGGBGGRGGBBGGRRBRGGBBGBRGRRGGBBRGBB" +
                "GGRGRBBRBBRRRGBBGGRBRRBGBBBGGGRRGGBRRGRGRRRGGBBGRBBBRGRGBGGGGBBGBBRRGBRRGRBGRRGRGRGGRRGBGRRGRBGBRBBBBBRBRGRRGGRBGB" +
                "GBRBBGGGGBBGBGRRRGBRGRRGBGBGBRGRGBBBGGBBBRRBRBRRRBBGGGRRBGRBBRBRGBBRRRGGBBGRRGGBBRRGRGBRGBGGBRGGGRBBGBBBRRGBGRBBRBRRGGGB" +
                "GGGGBBBGRRRRRRRGGRGBGRGBRGBBBGBBRRBGBBRGGRBBGGBBRRRBRGGGRRRGBGRBGBGRBRBRRGRGBRBRRRBGRRGRGBRBRGBGBBRGBGRRGRGGGGBRBBBBBGGRRGGG" +
                "BBRBRRBGRBBGGRBGBBGRBGRRRBBRGBGBBBRRGGRBGBGGBGRRRBRBGBGBGGBRBGRRRGBRRGBRRBBRRRRRRRRRRRGRRRGGGGRGGRBBBBGBGBGGRRRRGGGRBGRBRGBRBRBGBGBRGRRGBBRRBBBRBBBGBGRBRGBGBBRBRRGRBGRBGBGBGGBRRGRRRRBRRGRBBGGBBRGBRGRRRRBBBBRGRBGBRRBGGRGRRGGRBRRBRBRGRG" +
                "BRRBGGGRGRRRGBGGGRRGBGRGBBGRRBRGRBGRRRBBRRGRGGGGGRBGGGRBBGBRBBRBGRRRBBRRBRBRGGGBGRRBBGGBBBGBBBRGRGGRRGBGGGRBRBRBBGBRBRGBGGGGGGRGRGGBGRGG" +
                "BRGGBRBBGGGRGRRRGRRBRBGGGBBGBGGRRRBRRGGRGGRBRGGGBRRRRGRGGRBBBBRGGRBGRGBBRRBBRRBBRRBGGRRBBRGGRRGBGGRBGGRGGRGBRRRBGBBRBGRGGRRBRGGRGRRRBBRGBRGRBRRBRGRBGRBBGBBRRGGRRRBBBRBGRRRRRGB" +
                "GBBBBGBRRGRRGGRRBBBGGGGRGBRRGRGRGBRRRBGGRBRRGRBBRRGRGRGGBGGBBGBBRGRRGGRRGBBBBRBBGRBGRRRRGBRGGGBGRRBBRGBBBRGGRGGBRGBGBBGGBRRGRRGBGRBGGGRRGBRBRBGBGRBRGGRBRBRBBRBBRBBBBBRBRRGBRRRRRBBGGGBGRGBRGGRRBGGRRBRGRBRRRRBBBGBGGBBBBGBRGBRRRBBGBGRGRGGRGRGGBGRGGGBRBRRRGGBGRBBBRRBBBBBGBBRRGRGGBGGGBBRR" +
                "BBRBRGBBBRBBBRBBGRRGBGGRGRGGGBGRRBGGBBBRRRGGGBGGGBGGGBBBBGBBRBRBGBBRBRGRBBRRBBBRRRBBRRRRBGRRGGBGBGGBBBRGGBGGBGRBRRBRRGGRGBGGBBBGRBGBBGGGRGGRGGGRBRRBRRGGBBBRGRRRGGRBRBRRRGRGBBBBBBBRRGRRRRRGGRBBRBGBRBRGRGRBRGBGGBBGGBGBRGRBBBRRBRGGRBGBRRGBGBRRBRGBGGRRBBBBGRGRRBRBRRRBBGRRGBRGGBGRBBBBGGGBGRBBBRRRGRGGRGGR" +
                "BGBRRRRBBGBRBRBGGRRRGRBBGGGGBBBGRGBBBGRRRBBGBBGRBRGGRBGRRRRGGGRRBRRGRBGGBRGRBBRBGBRGBRBBBBBRRGRGGRBRBGRRRGGBGBRRGRGRGRBRRGGBGBGBRBBGRBGGBGGBRRRRRGRBRRGBGGRBRBBRBBRRBRBBBGBBRRGBRRRGBGGGBGBBRRGGRRRBGRRGGGGGGBBBRGRBRBBGBRRGGBGRGB" +
                "RGRGRBGBGRRGBBRRBBRGBBGBBBGRRGRGBGBRRBBRBBRRGGGBBRRGRRBBGBRRGBGBBRBGBBBBBRRRGRGRRRRGBRBBBRGBGRRBRBBGRGGGRBBGRRRBGRBGRBRGGBRBRRGB" +
                "BGGBGRBRBRRBRRBRR");
        char[] previousRow = row.toCharArray();
        char[] nextRow = new char[previousRow.length - 1];
        long time = System.currentTimeMillis() - start;
        System.out.println("time is " + time + "ms");
    }
}